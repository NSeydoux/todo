{"version":3,"sources":["services/fetchProfile.ts","services/fetchPublicTypeIndex.ts","services/addToTypeIndex.ts","services/initialiseNotesList.ts","hooks/useNotesList.ts","hooks/usePublicTypeIndex.ts","components/Todo.tsx","services/addNote.ts","components/TodosList.tsx","components/Dashboard.tsx","hooks/useProfile.ts","components/PodConnecter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fetchProfile","_fetchProfile","apply","this","arguments","_callee","currentSession","webIdDoc","profile","regenerator_default","a","wrap","_context","prev","next","solidAuth","sent","abrupt","fetchDocument","webId","getSubject","stop","fetchPublicTypeIndex","_fetchPublicTypeIndex","publicTypeIndexUrl","document","getRef","solid","publicTypeIndex","addToTypeIndex","_x","_x2","_x3","_addToTypeIndex","typeIndex","forClass","typeRegistration","addSubject","addRef","rdf","type","TypeRegistration","instance","asRef","save","initialiseNotesList","_initialiseNotesList","_ref","_ref2","storage","notesListRef","notesList","Promise","all","Object","slicedToArray","space","createDocument","schema","TextDigitalDocument","useNotesList","_React$useState","React","useState","_React$useState2","setPublicTypeIndex","useEffect","then","fetchedPublicTypeIndex","usePublicTypeIndex","setNotesList","asyncToGenerator","mark","notesListIndex","_notesList","notesListUrl","findSubject","Todo","props","value","getString","cal","status","created","completed","react_default","createElement","Fragment","className","onClick","changeStatus","checked","text","onDelete","addNote","_addNote","note","newNote","addLiteral","dateCreated","Date","now","TodosList","formContent","setFormContent","_React$useState3","_React$useState4","updatedNotesList","setUpdatedNotesList","notes","getSubjectsOfType","getNotes","_saveNote","event","updatedDoc","preventDefault","_deleteNote","_callee2","notesDocument","_context2","removeSubject","_changeStatus","_callee3","newStatus","_context3","setLiteral","dateModified","noteElements","sort","byDate","map","Todo_Todo","deleteNote","_x4","onSubmit","placeholder","onChange","e","target","filter","todo","length","note1","note2","date1","getDateTime","date2","getTime","Dashboard","setProfile","fetchedProfile","useProfile","name","foaf","concat","TodosList_TodosList","suggestedWebId","URLSearchParams","location","search","get","PodConnecter","chosenWebId","setWebId","SolidAuth","login","htmlFor","id","lib","popup","App","StrictMode","PodConnecter_PodConnecter","Dashboard_Dashboard","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53036620.chunk.js","sourcesContent":["import solidAuth from 'solid-auth-client';\nimport { fetchDocument } from 'tripledoc';\n\nexport async function fetchProfile () {\n  const currentSession = await solidAuth.currentSession();\n  if (!currentSession) {\n    return null;\n  }\n\n  const webIdDoc = await fetchDocument(currentSession.webId);\n  const profile = webIdDoc.getSubject(currentSession.webId);\n  return profile;\n}\n","import { fetchProfile } from './fetchProfile';\nimport { fetchDocument } from 'tripledoc';\nimport { solid } from 'rdf-namespaces';\n\nexport async function fetchPublicTypeIndex () {\n  const profile = await fetchProfile();\n  if (profile === null) {\n    return null;\n  }\n\n  const publicTypeIndexUrl = profile.getRef(solid.publicTypeIndex);\n  if (!publicTypeIndexUrl || typeof publicTypeIndexUrl !== 'string') {\n    return null;\n  }\n\n  const document = await fetchDocument(publicTypeIndexUrl);\n  return document;\n}\n","import { TripleDocument, Reference } from 'tripledoc';\nimport { rdf, solid } from 'rdf-namespaces';\n\nexport async function addToTypeIndex (\n  typeIndex: TripleDocument,\n  document: TripleDocument,\n  forClass: Reference,\n) {\n  const typeRegistration = typeIndex.addSubject();\n  typeRegistration.addRef(rdf.type, solid.TypeRegistration)\n  typeRegistration.addRef(solid.instance, document.asRef())\n  typeRegistration.addRef(solid.forClass, forClass)\n  return typeIndex.save([ typeRegistration ]);\n}\n","import { fetchProfile } from './fetchProfile';\nimport { space, schema } from 'rdf-namespaces';\nimport { createDocument } from 'tripledoc';\nimport { fetchPublicTypeIndex } from './fetchPublicTypeIndex';\nimport { addToTypeIndex } from './addToTypeIndex';\n\nexport async function initialiseNotesList () {\n  const [profile, publicTypeIndex] = await Promise.all([fetchProfile(), fetchPublicTypeIndex()]);\n  if (profile === null || publicTypeIndex === null) {\n    return null;\n  }\n\n  const storage = profile.getRef(space.storage);\n  if (typeof storage !== 'string') {\n    return null;\n  }\n\n  // Note: There's an assumption here that `/public/` exists and is writable for this app.\n  //       In the future, \"Shapes\" should hopefully allow us to get more guarantees about this:\n  //       https://ruben.verborgh.org/blog/2019/06/17/shaping-linked-data-apps/#need-for-shapes\n  const notesListRef = storage + 'public/notes.ttl';\n  const notesList = createDocument(notesListRef);\n  await notesList.save();\n  await addToTypeIndex(publicTypeIndex, notesList, schema.TextDigitalDocument);\n  return notesList;\n}\n","import React from 'react';\nimport { fetchDocument, TripleDocument, TripleSubject } from 'tripledoc';\nimport { solid, schema } from 'rdf-namespaces';\nimport { usePublicTypeIndex } from './usePublicTypeIndex';\nimport { initialiseNotesList } from '../services/initialiseNotesList';\n\nexport function useNotesList() {\n  const publicTypeIndex = usePublicTypeIndex();\n  const [notesList, setNotesList] = React.useState<TripleDocument>();\n\n  React.useEffect(() => {\n    if (!publicTypeIndex) {\n      return;\n    }\n\n    (async () => {\n      const notesListIndex = publicTypeIndex.findSubject(solid.forClass, schema.TextDigitalDocument);\n      if (!notesListIndex) {\n        // If no notes document is listed in the public type index, create one:\n        const notesList = await initialiseNotesList()\n        if (notesList === null) {\n          return;\n        }\n        setNotesList(notesList);\n        return;\n      } else {\n        // If the public type index does list a notes document, fetch it:\n        const notesListUrl = notesListIndex.getRef(solid.instance);\n        if (typeof notesListUrl !== 'string') {\n          return;\n        }\n        const document = await fetchDocument(notesListUrl);\n        setNotesList(document);\n      }\n    })();\n\n  }, [publicTypeIndex]);\n\n  return notesList;\n}\n\nexport function getNotes(notesList: TripleDocument): TripleSubject[] {\n  return notesList.getSubjectsOfType(schema.TextDigitalDocument);\n}\n","import React from 'react';\nimport { TripleDocument } from 'tripledoc';\nimport { fetchPublicTypeIndex } from '../services/fetchPublicTypeIndex';\n\nexport function usePublicTypeIndex() {\n  const [publicTypeIndex, setPublicTypeIndex] = React.useState<TripleDocument>();\n\n  React.useEffect(() => {\n    fetchPublicTypeIndex().then(fetchedPublicTypeIndex => {\n      if (fetchedPublicTypeIndex === null) {\n        return;\n      }\n      setPublicTypeIndex(fetchedPublicTypeIndex);\n    });\n  }, []);\n\n  return publicTypeIndex;\n}\n","import React from 'react';\nimport {cal, schema} from 'rdf-namespaces';\nimport {TripleSubject} from \"tripledoc\";\n\ninterface Props {\n    value: TripleSubject;\n    onDelete: Function;\n    changeStatus: Function;\n};\n\nexport const Todo: React.FC<Props> = (props) => {\n\n    const status = props.value.getString(cal.status) || cal.created;\n\n    if (status == cal.completed) {\n        return (\n            <>\n                <li className=\"completed\">\n                    <div className=\"view\">\n                        <input className=\"toggle\" type=\"checkbox\" onClick={() => props.changeStatus(cal.created)}\n                               checked/>\n                        <label>{props.value.getString(schema.text) || ''}</label>\n                        <button className=\"destroy\" onClick={() => props.onDelete()}></button>\n                    </div>\n                </li>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <li>\n                <div className=\"view\">\n                    <input className=\"toggle\" type=\"checkbox\" onClick={() => props.changeStatus(cal.completed)}/>\n                    <label>{props.value.getString(schema.text) || ''}</label>\n                    <button className=\"destroy\" onClick={() => props.onDelete()}></button>\n                </div>\n            </li>\n        </>\n    );\n};\n\n","import { TripleDocument } from 'tripledoc';\nimport { rdf, schema } from 'rdf-namespaces';\n\nexport async function addNote(note: string, notesList: TripleDocument): Promise<TripleDocument> {\n  const newNote = notesList.addSubject();\n  newNote.addRef(rdf.type, schema.TextDigitalDocument);\n  newNote.addLiteral(schema.text, note);\n  newNote.addLiteral(schema.dateCreated, new Date(Date.now()))\n\n  return await notesList.save([newNote]);\n}\n\nexport async function noteComplete(note: string, notesList: TripleDocument): Promise<TripleDocument> {\n  const newNote = notesList.addSubject();\n  newNote.addRef(rdf.type, schema.TextDigitalDocument);\n  newNote.addLiteral(schema.text, note);\n  newNote.addLiteral(schema.dateCreated, new Date(Date.now()))\n\n  return await notesList.save([newNote]);\n}\n","import React from 'react';\nimport {getNotes, useNotesList} from '../hooks/useNotesList';\nimport {Todo} from './Todo';\nimport {TripleDocument, TripleSubject} from \"tripledoc\";\nimport {cal, schema} from \"rdf-namespaces\";\nimport {addNote} from \"../services/addNote\";\n\nexport const TodosList: React.FC = () => {\n    const notesList = useNotesList();\n    const [formContent, setFormContent] = React.useState('');\n    const [updatedNotesList, setUpdatedNotesList] = React.useState<TripleDocument>();\n\n    if (!notesList) {\n        return null;\n    }\n\n    const notes = getNotes(updatedNotesList || notesList);\n\n\n    async function saveNote(event: React.FormEvent) {\n        event.preventDefault();\n        if (!notesList) {\n            return;\n        }\n        const updatedDoc = await addNote(formContent, updatedNotesList || notesList);\n        setUpdatedNotesList(updatedDoc);\n        setFormContent('');\n    }\n\n    async function deleteNote(note: TripleSubject) {\n        const notesDocument = updatedNotesList || notesList;\n        if (!notesDocument) {\n            return;\n        }\n\n        notesDocument.removeSubject(note.asRef());\n        const updatedDoc = await notesDocument.save();\n        setUpdatedNotesList(updatedDoc);\n    }\n\n    async function changeStatus(note: TripleSubject, newStatus: string) {\n        const notesDocument = updatedNotesList || notesList;\n        if (!notesDocument) {\n            return;\n        }\n\n        note.setLiteral(cal.status, newStatus);\n        note.setLiteral(schema.dateModified, new Date(Date.now()));\n        const updatedDoc = await notesDocument.save();\n        setUpdatedNotesList(updatedDoc);\n        return updatedDoc.getSubject(note.asRef());\n    }\n\n    const noteElements = notes.sort(byDate).map((note) => (\n        <Todo value={note} onDelete={() => {\n            deleteNote(note)\n        }} changeStatus={(status: string) => {\n            changeStatus(note, status)\n        }}/>\n    ));\n\n\n    return (\n        <>\n            <header className=\"header\">\n                <h1>\n                    Todos\n                </h1>\n                <form onSubmit={saveNote}>\n                    <input className=\"new-todo\" placeholder=\"What needs to be done?\" value={formContent}\n                           onChange={(e) => {\n                               e.preventDefault();\n                               setFormContent(e.target.value);\n                           }}/>\n                </form>\n            </header>\n\n            <section className=\"main\">\n                <ul className=\"todo-list\">\n                    {noteElements}\n                </ul>\n            </section>\n            <footer className=\"footer\">\n                <span className=\"todo-count\"><strong>{openTodosCount(notes)}</strong> items left</span>\n            </footer>\n        </>\n    );\n};\n\nfunction byDate(note1: TripleSubject, note2: TripleSubject): number {\n    const date1 = note1.getDateTime(schema.dateCreated);\n    const date2 = note2.getDateTime(schema.dateCreated);\n    if (!(date1 instanceof Date) || !(date2 instanceof Date)) {\n        return 0;\n    }\n\n    return date2.getTime() - date1.getTime();\n}\n\nfunction openTodosCount(todos: TripleSubject[]): number {\n    return todos.filter((todo: TripleSubject) => {\n        return cal.completed != todo.getString(cal.status);\n    }).length;\n}\n\n","import React from 'react';\nimport {foaf} from 'rdf-namespaces';\nimport {useProfile} from '../hooks/useProfile';\nimport {TodosList} from './TodosList';\n\nexport const Dashboard: React.FC = () => {\n    const profile = useProfile();\n\n    const name = (profile) ? profile.getString(foaf.name) : null;\n    const title = (name)\n        ? `Public Todos for ${name}`\n        : 'Public Todos';\n\n    return <>\n        <section className=\"todoapp\">\n            <TodosList />\n        </section>\n    </>;\n};\n","import React from 'react';\nimport { TripleSubject } from 'tripledoc';\nimport { fetchProfile } from '../services/fetchProfile';\n\nexport function useProfile() {\n  const [profile, setProfile] = React.useState<TripleSubject>();\n\n  React.useEffect(() => {\n    fetchProfile().then((fetchedProfile) => {\n      if (fetchedProfile === null) {\n        return;\n      }\n      setProfile(fetchedProfile);\n    });\n  }, []);\n\n  return profile;\n}\n","import React from 'react';\nimport { LoginButton } from '@solid/react';\nimport SolidAuth from 'solid-auth-client';\n\nconst suggestedWebId = (URLSearchParams && document.location.search)\n  ? (new URLSearchParams(document.location.search)).get('webid')\n  : null;\n\nexport const PodConnecter: React.FC = () => {\n  const [chosenWebId, setWebId] = React.useState(suggestedWebId);\n\n  if (suggestedWebId) {\n    const login = () => {\n      if (!chosenWebId) {\n        return;\n      }\n\n      SolidAuth.login(chosenWebId);\n    }\n\n    return (\n      <form onSubmit={(event) => {event.preventDefault(); login(); }}>\n        <div className=\"field\">\n          <div className=\"control\">\n            <label htmlFor=\"webid\" className=\"label\">Your WebID:</label>\n            <input\n              type=\"url\"\n              name=\"webid\"\n              id=\"webid\"\n              className=\"input is-large\"\n              value={chosenWebId || ''}\n              onChange={(e) => { e.preventDefault(); setWebId(e.target.value); }}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <input type=\"submit\" className=\"button is-primary is-large\" value=\"Connect\"/>\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  return <>\n    <LoginButton popup=\"popup.html\" className=\"button is-large is-primary\">Connect</LoginButton>\n  </>;\n}\n","import React from 'react';\nimport { LoggedOut, LoggedIn } from '@solid/react';\nimport { Dashboard } from './components/Dashboard';\nimport { PodConnecter } from './components/PodConnecter';\n\nconst App: React.FC = () => {\n  return <>\n    <React.StrictMode>\n      <LoggedOut>\n        <section className=\"section\">\n          <p className=\"content\">Please connect to your Pod to start taking Todos.</p>\n          <p className=\"content\">\n            <PodConnecter/>\n          </p>\n        </section>\n      </LoggedOut>\n      <LoggedIn>\n        <Dashboard/>\n      </LoggedIn>\n    </React.StrictMode>\n  </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}